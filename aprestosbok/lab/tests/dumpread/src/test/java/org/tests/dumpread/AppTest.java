package org.tests.dumpread;

import java.sql.SQLException;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.tests.dumpread.data.interfaces.DBConnection;
import org.tests.dumpread.data.interfaces.RecordGW;
import org.tests.dumpread.data.model.Record;
import org.tests.dumpread.exceptions.DBConnectionException;
import org.tests.dumpread.exceptions.DumpReadException;
import org.tests.dumpread.parsers.interfaces.DumpRecordFieldParser;

/**
 * Unit test for simple App.
 */
public class AppTest
{
	private static ApplicationContext context;

	@Test
	public void testDBCOnnection() throws DBConnectionException, SQLException
    {
    	DBConnection _o = (DBConnection) context.getBean("dbconnection");
    	_o.open();
    	Assert.assertNotNull(_o.getConnection());
        _o.getConnection().close();
    }
    
	@Test
    public void testRecordGWWiring()
    {
    	RecordGW gw = (RecordGW)context.getBean("recordgw");
    	Assert.assertNotNull(gw);
    }
    
	@Test
    public void testDumpReaderWiring()
    {
    	DumpReader dr = (DumpReader)context.getBean("dumpreader");
    	Assert.assertNotNull(dr);
    }
    
	@Test
    public void testFieldParser() throws DumpReadException
    {
    	Record _expected = new Record();
    	_expected.setId(0); //we will forget the id as it is generated by the database
    	_expected.setArticleId(5553);
    	_expected.setAttribute("definition");
    	_expected.setValue("Bathos is the name given to the feeling that the tone or language being used is far more elevated than is appropriate.  " +
    			"Unintentional bathos can utterly scupper a poem, as that sense of distance and disconnectedness is funny, but that humour " +
    			"can be used intentionally, often to humorous or satiric effect.  The speaker in Ian Duhig's 'According to Dineen', " +
    			"for example, reaches for the images of high romance, such as the moon, but each time finds a bathetic image, " +
    			"like the half-boiled potato, that brings the poem down to earth.  The love may not be in doubt, but trying to express it \"\"properly, according to Dineen\"\" is shown to be in vain.");
    	_expected.setType((short)1);
    	
    	
    	DumpRecordFieldParser drfp = (DumpRecordFieldParser)this.context.getBean("recordfieldparser");
    	Record _actual = drfp.parseRecord(new String[] {"26039","5553","definition",
    			"Bathos is the name given to the feeling that the tone or language being used is far more elevated than is appropriate.  " +
    			"Unintentional bathos can utterly scupper a poem, as that sense of distance and disconnectedness is funny, but that humour " +
    			"can be used intentionally, often to humorous or satiric effect.  The speaker in Ian Duhig's 'According to Dineen', " +
    			"for example, reaches for the images of high romance, such as the moon, but each time finds a bathetic image, " +
    			"like the half-boiled potato, that brings the poem down to earth.  The love may not be in doubt, but trying to express it \"\"properly, according to Dineen\"\" is shown to be in vain.","","1"});
    	
    	Assert.assertEquals(_expected, _actual);

    }
    
	@Test
    public void testDumpReader() throws DumpReadException
    {
    	DumpReader dr = (DumpReader)context.getBean("dumpreader");
    	dr.readDumpIn(AppTest.class.getResourceAsStream("/test.csv"));
    	Assert.assertNotNull(dr);
        
    }
    
	@Test(expected=DumpReadException.class)
    public void test2DumpReader() throws DumpReadException
    {
    	DumpReader dr = (DumpReader)context.getBean("dumpreader");
    	dr.readDumpIn(AppTest.class.getResourceAsStream("/test2.csv"));
    	Assert.assertNotNull(dr);
        
    }
       
	@BeforeClass
	public static void setUp() throws Exception
	{
		context = new ClassPathXmlApplicationContext("springconfig.xml");

	}
    

    /* (non-Javadoc)
	 * @see junit.framework.TestCase#tearDown()
	 */
	@AfterClass
	public static void tearDown() throws Exception
	{
		context = null;
	}

}
