/*
 * WaitingDialog.java
 *
 * Created on 27 de Fevereiro de 2008, 19:34
 */

package snippetlab.snippets.misc.WaitingDialogDigressions;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author  jtviegas
 */
public class WaitingDialog extends javax.swing.JDialog 
{
    
    private TimerThreadImpl thread;
    private long delay = 5000;
    private String message = "...working...";
    private String buttonText = "Cancel";

    public WaitingDialog(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
    }

    public void setButtonText(String buttonText) 
    {
        this.buttonText = buttonText;
    }

    public void setDelay(long delay) 
    {
        this.delay = delay;
    }

    public void setMessage(String message) 
    {
        this.message = message;
    }
    
    public void init()
    {
        initComponents();
        this.label.setText(message);
        this.cancelButton.setText(buttonText);
        this.cancelButton.addActionListener(new ActionListenerImpl());
        this.addWindowListener(new WindowAdapterImpl());
        cancelButton.setVisible(false);        
    }
    
    @Override
    public void setVisible(boolean b) 
    {
        if(b)
        {
            System.out.println("WaitingDialog - going to start sleep thread");
            thread = new TimerThreadImpl();
            thread.start();
            System.out.println("WaitingDialog - sleep thread started");
        }
        
        super.setVisible(b);
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        label = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jProgressBar1.setIndeterminate(true);

        label.setFont(new java.awt.Font("Comic Sans MS", 0, 11));
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("working");

        cancelButton.setText("cancel");
        cancelButton.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables
    
    
    
    private class TimerThreadImpl extends Thread
    {
    
        public TimerThreadImpl()
        {
            setDaemon(true);
        }
        @Override
        public void run() 
        {
            try
            {
                System.out.println("WaitingDialog - going to sleep 5 secs");
                sleep(delay);
                System.out.println("WaitingDialog - sleep timed out");
                System.out.println("WaitingDialog - going to show cancelButton");
                cancelButton.setVisible(true);
                cancelButton.revalidate();
                System.out.println("WaitingDialog - cancelButton shown");
            }
            catch(InterruptedException ie)
            {
                ie.printStackTrace();
            }

        }
        
    }
    
    private class ActionListenerImpl implements ActionListener
    {
       public void actionPerformed(ActionEvent e) 
            {
                System.out.println("WaitingDialog - cancelButton has been clicked, going to hide dialog");
                setVisible(false);
                System.out.println("WaitingDialog - dialog hidden");
            } 
    }
    
    private class WindowAdapterImpl extends WindowAdapter 
    {
       @Override
        public void windowClosed(WindowEvent e) 
        {
            System.out.println("dialog closed - going to check thread");
            
            if(thread.isAlive())
                thread.interrupt();
        }
    }
    
}
