db.artists.find({"activePlaceCount":{"$gt":0}, "activePlaces.placeName":"London"})


db.artworks.aggregate( [
   {
      $graphLookup: {
         from: "artworks",
         startWith: "$subjects",
         connectFromField: "reportsTo",
         connectToField: "name",
         as: "reportingHierarchy"
      }
   }
] )

db.artworks.find(
  function () {

    var findVals = ["arm","arms raised"];

    function inspection(doc) {
      return Object.keys(doc).some(function(key) {
        if( key === "subjects" )
            return inspectSubjects(doc[key]);
      });
    }

    function containsChildren(arr){
        var _firstElement = arr[0];
        if ( typeof(_firstElement) == "object" && -1 < Object.keys(doc).indexOf("children") )
            return true;
        else
            return false;
    }

    function inspectChildren(arr) {

      return arr.some(function(el) {
        if ( typeof(el) == "array" && containsChildren(arr) ) {
          return inspectChildren(el);
        } else {
            var result = false;
            var i = 0;
            for(i=0; i<arr.length; i++ ){
                var o = arr[i];
                if( -1 < findVals.indexOf(o["name"]) ){
                    result = true;
                    break;
                }
            }
          return result;
        }
      });
    }

    function inspectSubjects(doc) {
      return Object.keys(doc).some(function(key) {
        if( key === "children" && typeof(doc[key]) == "array" )
            return inspectChildren(doc[key]);
      });
    }

    return inspection(this);
  }
)



db.artworks.find(
  function () {

    var findVals = ["arm","arms raised"];

    function inspectSubjects(){

    }

    function inspection(doc) {
      return Object.keys(doc).some(function(key) {
        if( key === "subjects" )
            return true;

      });
    }

    return inspection(this);
  }
)